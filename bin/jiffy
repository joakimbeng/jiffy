#!/usr/bin/env node

var printer = require('../lib/printer'),
    cli = require('../lib/cli'),
    q = require('q');

var commands = [
  {name: 'build', description: 'Build the blog', default: true},
  {name: 'init', description: 'Initialize a new blog in the current folder'}
];

params = cli.init(commands);

switch (params.command) {
  case 'init':
    init();
    break;
  case 'build':
    build();
    break;
}

function init () {
  q.try(function () {
    return require('../lib/initializer');
  })
  .then(function (initializer) {
    return initializer.initialize()
      .then(build)
      .then(function () {
        printer.ok('\nOpen the build/index.html in your browser to view the result!\n');
      });
  })
  .fail(printer.fatal);
}

function build () {
  return q.try(function () {
      return [
        require('../lib/reader'),
        require('../lib/builder')
      ]
    })
    .spread(function (reader, builder) {
      var started = Date.now();
      printer.info('Building...\n');

      return reader.read()
        .then(builder.build)
        .then(function () {
          printer.ok('Build done in ' + ((Date.now() - started)/1000).toFixed(2) + ' s\n');
        });
    })
    .fail(printer.fatal);
}
